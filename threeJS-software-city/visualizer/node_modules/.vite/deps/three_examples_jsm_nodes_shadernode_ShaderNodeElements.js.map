{
  "version": 3,
  "sources": ["../../three/examples/jsm/nodes/accessors/ReflectNode.js", "../../three/examples/jsm/nodes/accessors/CubeTextureNode.js", "../../three/examples/jsm/nodes/accessors/InstanceNode.js", "../../three/examples/jsm/nodes/accessors/SkinningNode.js", "../../three/examples/jsm/nodes/display/ColorSpaceNode.js", "../../three/examples/jsm/nodes/display/NormalMapNode.js", "../../three/examples/jsm/nodes/display/ToneMappingNode.js", "../../three/examples/jsm/nodes/functions/light/getDistanceAttenuation.js", "../../three/examples/jsm/nodes/lights/LightNode.js", "../../three/examples/jsm/nodes/lights/LightsNode.js", "../../three/examples/jsm/nodes/lights/LightContextNode.js", "../../three/examples/jsm/nodes/utils/MatcapUVNode.js", "../../three/examples/jsm/nodes/utils/MaxMipLevelNode.js", "../../three/examples/jsm/nodes/utils/TimerNode.js", "../../three/examples/jsm/nodes/utils/OscNode.js", "../../three/examples/jsm/nodes/utils/SpriteSheetUVNode.js", "../../three/examples/jsm/nodes/procedural/CheckerNode.js", "../../three/examples/jsm/nodes/fog/FogNode.js", "../../three/examples/jsm/nodes/fog/FogRangeNode.js", "../../three/examples/jsm/nodes/functions/BSDF/F_Schlick.js", "../../three/examples/jsm/nodes/functions/BSDF/V_GGX_SmithCorrelated.js", "../../three/examples/jsm/nodes/functions/BSDF/D_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_GGX.js", "../../three/examples/jsm/nodes/functions/BSDF/BRDF_Lambert.js", "../../three/examples/jsm/nodes/functions/material/getGeometryRoughness.js", "../../three/examples/jsm/nodes/functions/material/getRoughness.js", "../../three/examples/jsm/nodes/functions/PhysicalLightingModel.js", "../../three/examples/jsm/nodes/shadernode/ShaderNodeElements.js"],
  "sourcesContent": ["import Node from '../core/Node.js';\nimport { nodeObject, normalWorld, positionWorld, cameraPosition, sub, normalize, vec3, negate, reflect } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass ReflectNode extends Node {\n\n\tstatic VECTOR = 'vector';\n\tstatic CUBE = 'cube';\n\n\tconstructor( scope = ReflectNode.CUBE ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `reflect-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === ReflectNode.VECTOR ) {\n\n\t\t\tconst cameraToFrag = normalize( sub( positionWorld, cameraPosition ) );\n\t\t\tconst reflectVec = reflect( cameraToFrag, normalWorld );\n\n\t\t\treturn reflectVec.build( builder );\n\n\t\t} else if ( scope === ReflectNode.CUBE ) {\n\n\t\t\tconst reflectVec = nodeObject( new ReflectNode( ReflectNode.VECTOR ) );\n\t\t\tconst cubeUV = vec3( negate( reflectVec.x ), reflectVec.yz );\n\n\t\t\treturn cubeUV.build( builder );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nexport default ReflectNode;\n", "import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n\n\tconstructor( value, uvNode = new ReflectNode(), biasNode = null ) {\n\n\t\tsuper( value, uvNode, biasNode );\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'cubeTexture';\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst texture = this.value;\n\n\t\tif ( ! texture || texture.isCubeTexture !== true ) {\n\n\t\t\tthrow new Error( 'CubeTextureNode: Need a three.js cube texture.' );\n\n\t\t}\n\n\t\tconst textureProperty = UniformNode.prototype.generate.call( this, builder, 'cubeTexture' );\n\n\t\tif ( output === 'sampler' ) {\n\n\t\t\treturn textureProperty + '_sampler';\n\n\t\t} else if ( builder.isReference( output ) ) {\n\n\t\t\treturn textureProperty;\n\n\t\t} else {\n\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tlet snippet = nodeData.snippet;\n\n\t\t\tif ( snippet === undefined ) {\n\n\t\t\t\tconst uvSnippet = this.uvNode.build( builder, 'vec3' );\n\t\t\t\tconst biasNode = this.biasNode;\n\n\t\t\t\tif ( biasNode !== null ) {\n\n\t\t\t\t\tconst biasSnippet = biasNode.build( builder, 'float' );\n\n\t\t\t\t\tsnippet = builder.getCubeTextureBias( textureProperty, uvSnippet, biasSnippet );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsnippet = builder.getCubeTexture( textureProperty, uvSnippet );\n\n\t\t\t\t}\n\n\t\t\t\tnodeData.snippet = snippet;\n\n\t\t\t}\n\n\t\t\treturn builder.format( snippet, 'vec4', output );\n\n\t\t}\n\n\t}\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\n\nexport default CubeTextureNode;\n", "import Node from '../core/Node.js';\nimport {\n\tvec3,\n\tmat3,\n\tmul,\n\tassign,\n\tbuffer,\n\telement,\n\tdot,\n\tdiv,\n\ttemp,\n\tinstanceIndex,\n\tpositionLocal,\n\tnormalLocal\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nclass InstanceNode extends Node {\n\n\tconstructor( instanceMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.instanceMesh = instanceMesh;\n\n\t\t//\n\n\t\tconst instanceBufferNode = buffer( instanceMesh.instanceMatrix.array, 'mat4', instanceMesh.count );\n\n\t\tthis.instanceMatrixNode = temp( element( instanceBufferNode, instanceIndex ) ); // @TODO: a possible caching issue here?\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { instanceMatrixNode } = this;\n\n\t\t// POSITION\n\n\t\tconst instancePosition = mul( instanceMatrixNode, positionLocal ).xyz;\n\n\t\t// NORMAL\n\n\t\tconst m = mat3( instanceMatrixNode[ 0 ].xyz, instanceMatrixNode[ 1 ].xyz, instanceMatrixNode[ 2 ].xyz );\n\n\t\tconst transformedNormal = div( normalLocal, vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) ) );\n\n\t\tconst instanceNormal = mul( m, transformedNormal ).xyz;\n\n\t\t// ASSIGNS\n\n\t\tassign( positionLocal, instancePosition ).build( builder );\n\t\tassign( normalLocal, instanceNormal ).build( builder );\n\n\t}\n\n}\n\nexport default InstanceNode;\n", "import Node from '../core/Node.js';\nimport {\n\tShaderNode,\n\tattribute,\n\tbuffer,\n\tmat4,\n\tuniform,\n\tpositionLocal,\n\tnormalLocal,\n\tassign,\n\telement,\n\tadd,\n\tmul,\n\ttransformDirection\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { NodeUpdateType } from '../core/constants.js';\n\nconst Skinning = new ShaderNode( ( inputs, builder ) => {\n\n\tconst { index, weight, bindMatrix, bindMatrixInverse, boneMatrices } = inputs;\n\n\tconst boneMatX = element( boneMatrices, index.x );\n\tconst boneMatY = element( boneMatrices, index.y );\n\tconst boneMatZ = element( boneMatrices, index.z );\n\tconst boneMatW = element( boneMatrices, index.w );\n\n\t// POSITION\n\n\tconst skinVertex = mul( bindMatrix, positionLocal );\n\n\tconst skinned = add(\n\t\tmul( mul( boneMatX, skinVertex ), weight.x ),\n\t\tmul( mul( boneMatY, skinVertex ), weight.y ),\n\t\tmul( mul( boneMatZ, skinVertex ), weight.z ),\n\t\tmul( mul( boneMatW, skinVertex ), weight.w )\n\t);\n\n\tconst skinPosition = mul( bindMatrixInverse, skinned ).xyz;\n\n\t// NORMAL\n\n\tlet skinMatrix = add(\n\t\tmul( weight.x, boneMatX ),\n\t\tmul( weight.y, boneMatY ),\n\t\tmul( weight.z, boneMatZ ),\n\t\tmul( weight.w, boneMatW )\n\t);\n\n\tskinMatrix = mul( mul( bindMatrixInverse, skinMatrix ), bindMatrix );\n\n\tconst skinNormal = transformDirection( skinMatrix, normalLocal ).xyz;\n\n\t// ASSIGNS\n\n\tassign( positionLocal, skinPosition ).build( builder );\n\tassign( normalLocal, skinNormal ).build( builder );\n\n} );\n\nclass SkinningNode extends Node {\n\n\tconstructor( skinnedMesh ) {\n\n\t\tsuper( 'void' );\n\n\t\tthis.skinnedMesh = skinnedMesh;\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\t//\n\n\t\tthis.skinIndexNode = attribute( 'skinIndex', 'uvec4' );\n\t\tthis.skinWeightNode = attribute( 'skinWeight', 'vec4' );\n\n\t\tthis.bindMatrixNode = uniform( mat4( skinnedMesh.bindMatrix ) );\n\t\tthis.bindMatrixInverseNode = uniform( mat4( skinnedMesh.bindMatrixInverse ) );\n\t\tthis.boneMatricesNode = buffer( skinnedMesh.skeleton.boneMatrices, 'mat4', skinnedMesh.skeleton.bones.length );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tSkinning.call( {\n\t\t\tindex: this.skinIndexNode,\n\t\t\tweight: this.skinWeightNode,\n\t\t\tbindMatrix: this.bindMatrixNode,\n\t\t\tbindMatrixInverse: this.bindMatrixInverseNode,\n\t\t\tboneMatrices: this.boneMatricesNode\n\t\t}, builder );\n\n\t}\n\n\tupdate() {\n\n\t\tthis.skinnedMesh.skeleton.update();\n\n\t}\n\n}\n\nexport default SkinningNode;\n", "import TempNode from '../core/Node.js';\nimport { ShaderNode, vec3, pow, mul, sub, mix, vec4, lessThanEqual } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { LinearEncoding, sRGBEncoding } from 'three';\n\nexport const LinearToLinear = new ShaderNode( ( inputs ) => {\n\n\treturn inputs.value;\n\n} );\n\nexport const LinearTosRGB = new ShaderNode( ( inputs ) => {\n\n\tconst { value } = inputs;\n\n\tconst rgb = value.rgb;\n\n\tconst a = sub( mul( pow( value.rgb, vec3( 0.41666 ) ), 1.055 ), vec3( 0.055 ) );\n\tconst b = mul( rgb, 12.92 );\n\tconst factor = vec3( lessThanEqual( rgb, vec3( 0.0031308 ) ) );\n\n\tconst rgbResult = mix( a, b, factor );\n\n\treturn vec4( rgbResult, value.a );\n\n} );\n\nconst EncodingLib = {\n\tLinearToLinear,\n\tLinearTosRGB\n};\n\nclass ColorSpaceNode extends TempNode {\n\n\tstatic LINEAR_TO_LINEAR = 'LinearToLinear';\n\tstatic LINEAR_TO_SRGB = 'LinearTosRGB';\n\n\tconstructor( method, node ) {\n\n\t\tsuper( 'vec4' );\n\n\t\tthis.method = method;\n\n\t\tthis.node = node;\n\n\t}\n\n\tfromEncoding( encoding ) {\n\n\t\tlet method = null;\n\n\t\tif ( encoding === LinearEncoding ) {\n\n\t\t\tmethod = 'Linear';\n\n\t\t} else if ( encoding === sRGBEncoding ) {\n\n\t\t\tmethod = 'sRGB';\n\n\t\t}\n\n\t\tthis.method = 'LinearTo' + method;\n\n\t\treturn this;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst method = this.method;\n\t\tconst node = this.node;\n\n\t\tif ( method !== ColorSpaceNode.LINEAR_TO_LINEAR ) {\n\n\t\t\tconst encodingFunctionNode = EncodingLib[ method ];\n\n\t\t\treturn encodingFunctionNode.call( {\n\t\t\t\tvalue: node\n\t\t\t} ).build( builder, type );\n\n\t\t} else {\n\n\t\t\treturn node.build( builder, type );\n\n\t\t}\n\n\t}\n\n}\n\nexport default ColorSpaceNode;\n", "import TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, positionView, normalView, uv, vec3, cond, add, sub, mul, dFdx, dFdy, cross, max, dot, normalize, inversesqrt, equal, faceDirection } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// Normal Mapping Without Precomputed Tangents\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode( ( inputs ) => {\n\n\tconst { eye_pos, surf_norm, mapN, uv } = inputs;\n\n\tconst q0 = dFdx( eye_pos.xyz );\n\tconst q1 = dFdy( eye_pos.xyz );\n\tconst st0 = dFdx( uv.st );\n\tconst st1 = dFdy( uv.st );\n\n\tconst N = surf_norm; // normalized\n\n\tconst q1perp = cross( q1, N );\n\tconst q0perp = cross( N, q0 );\n\n\tconst T = add( mul( q1perp, st0.x ), mul( q0perp, st1.x ) );\n\tconst B = add( mul( q1perp, st0.y ), mul( q0perp, st1.y ) );\n\n\tconst det = max( dot( T, T ), dot( B, B ) );\n\tconst scale = cond( equal( det, 0 ), 0, mul( faceDirection, inversesqrt( det ) ) );\n\n\treturn normalize( add( mul( T, mul( mapN.x, scale ) ), mul( B, mul( mapN.y, scale ) ), mul( N, mapN.z ) ) );\n\n} );\n\nclass NormalMapNode extends TempNode {\n\n\tconstructor( node, scaleNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.node = node;\n\t\tthis.scaleNode = scaleNode;\n\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst { normalMapType, scaleNode } = this;\n\n\t\tconst normalOP = mul( this.node, 2.0 );\n\t\tlet normalMap = sub( normalOP, 1.0 );\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tconst normalMapScale = mul( normalMap.xy, scaleNode );\n\t\t\tnormalMap = vec3( normalMapScale, normalMap.z );\n\n\t\t}\n\n\t\tif ( normalMapType === ObjectSpaceNormalMap ) {\n\n\t\t\tconst vertexNormalNode = mul( new ModelNode( ModelNode.NORMAL_MATRIX ), normalMap );\n\n\t\t\tconst normal = normalize( vertexNormalNode );\n\n\t\t\treturn normal.build( builder, type );\n\n\t\t} else if ( normalMapType === TangentSpaceNormalMap ) {\n\n\t\t\tconst perturbNormal2ArbCall = perturbNormal2ArbNode.call( {\n\t\t\t\teye_pos: positionView,\n\t\t\t\tsurf_norm: normalView,\n\t\t\t\tmapN: normalMap,\n\t\t\t\tuv: uv()\n\t\t\t} );\n\n\t\t\treturn perturbNormal2ArbCall.build( builder, type );\n\n\t\t}\n\n\t}\n\n}\n\nexport default NormalMapNode;\n", "import TempNode from '../core/Node.js';\nimport { ShaderNode, mul, float } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { LinearToneMapping } from 'three';\n\n// exposure only\nexport const LinearToneMappingNode = new ShaderNode( ( { color, exposure } ) => {\n\n\treturn mul( color, exposure );\n\n} );\n\nclass ToneMappingNode extends TempNode {\n\n\tconstructor( toneMapping, exposureNode = float( 1 ), colorNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.toneMapping = toneMapping;\n\n\t\tthis.exposureNode = exposureNode;\n\t\tthis.colorNode = colorNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst colorNode = this.color || builder.context.color;\n\n\t\tconst toneMapping = this.toneMapping;\n\t\tconst toneMappingParams = { exposure: this.exposureNode, color: colorNode };\n\n\t\tif ( toneMapping === LinearToneMapping ) {\n\n\t\t\treturn LinearToneMappingNode.call( toneMappingParams ).build( builder, type );\n\n\t\t} else {\n\n\t\t\treturn this.colorNode.build( builder, type );\n\n\t\t}\n\n\t}\n\n}\n\nexport default ToneMappingNode;\n", "import {\n\tShaderNode, div, max, sub, mul, saturate, pow, pow2, pow4, cond, greaterThan\n} from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst getDistanceAttenuation = new ShaderNode( ( inputs ) => {\n\n\tconst { lightDistance, cutoffDistance, decayExponent } = inputs;\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\tconst distanceFalloff = div( 1.0, max( pow( lightDistance, decayExponent ), 0.01 ) );\n\n\treturn cond(\n\t\tgreaterThan( cutoffDistance, 0 ),\n\t\tmul( distanceFalloff, pow2( saturate( sub( 1.0, pow4( div( lightDistance, cutoffDistance ) ) ) ) ) ),\n\t\tdistanceFalloff\n\t);\n\n} ); // validated\n\nexport default getDistanceAttenuation;\n", "import Node from '../core/Node.js';\nimport Object3DNode from '../accessors/Object3DNode.js';\nimport PositionNode from '../accessors/PositionNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport getDistanceAttenuation from '../functions/light/getDistanceAttenuation.js';\n\nimport { Color } from 'three';\n\nclass LightNode extends Node {\n\n\tconstructor( light = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.updateType = NodeUpdateType.Object;\n\n\t\tthis.light = light;\n\n\t\tthis._colorNode = new UniformNode( new Color() );\n\n\t\tthis._lightCutoffDistanceNode = new UniformNode( 0 );\n\t\tthis._lightDecayExponentNode = new UniformNode( 0 );\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.light.uuid;\n\n\t}\n\n\tupdate( /* frame */ ) {\n\n\t\tthis._colorNode.value.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\t\tthis._lightCutoffDistanceNode.value = this.light.distance;\n\t\tthis._lightDecayExponentNode.value = this.light.decay;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst lightPositionView = new Object3DNode( Object3DNode.VIEW_POSITION );\n\t\tconst positionView = new PositionNode( PositionNode.VIEW );\n\n\t\tconst lVector = new OperatorNode( '-', lightPositionView, positionView );\n\n\t\tconst lightDirection = new MathNode( MathNode.NORMALIZE, lVector );\n\n\t\tconst lightDistance = new MathNode( MathNode.LENGTH, lVector );\n\n\t\tconst lightAttenuation = getDistanceAttenuation.call( {\n\t\t\tlightDistance,\n\t\t\tcutoffDistance: this._lightCutoffDistanceNode,\n\t\t\tdecayExponent: this._lightDecayExponentNode\n\t\t} );\n\n\t\tconst lightColor = new OperatorNode( '*', this._colorNode, lightAttenuation );\n\n\t\tlightPositionView.object3d = this.light;\n\n\t\tconst lightingModelFunctionNode = builder.context.lightingModelNode;\n\n\t\tif ( lightingModelFunctionNode !== undefined ) {\n\n\t\t\tconst reflectedLight = builder.context.reflectedLight;\n\n\t\t\tlightingModelFunctionNode.call( {\n\t\t\t\tlightDirection,\n\t\t\t\tlightColor,\n\t\t\t\treflectedLight\n\t\t\t}, builder );\n\n\t\t}\n\n\t}\n\n}\n\nexport default LightNode;\n", "import Node from '../core/Node.js';\nimport LightNode from './LightNode.js';\n\nconst sortLights = ( lights ) => {\n\n\treturn lights.sort( ( a, b ) => a.id - b.id );\n\n};\n\nclass LightsNode extends Node {\n\n\tconstructor( lightNodes = [] ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.lightNodes = lightNodes;\n\n\t\tthis._hash = null;\n\n\t}\n\n\tget hasLight() {\n\n\t\treturn this.lightNodes.length > 0;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst lightNodes = this.lightNodes;\n\n\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\tlightNode.build( builder );\n\n\t\t}\n\n\t\treturn 'vec3( 0.0 )';\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\tif ( this._hash === null ) {\n\n\t\t\tlet hash = '';\n\t\t\t\n\t\t\tconst lightNodes = this.lightNodes;\n\n\t\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\t\thash += lightNode.light.uuid + ' ';\n\n\t\t\t}\n\t\t\t\n\t\t\tthis._hash = hash;\n\t\t\t\n\t\t}\n\n\t\treturn this._hash;\n\n\t}\n\n\tgetLightNodeByHash( hash ) {\n\n\t\tconst lightNodes = this.lightNodes;\n\n\t\tfor ( const lightNode of lightNodes ) {\n\n\t\t\tif ( lightNode.light.uuid === hash ) {\n\n\t\t\t\treturn lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfromLights( lights ) {\n\n\t\tconst lightNodes = [];\n\n\t\tlights = sortLights( lights );\n\n\t\tfor ( const light of lights ) {\n\n\t\t\tlet lightNode = this.getLightNodeByHash( light.uuid );\n\n\t\t\tif ( lightNode === null ) {\n\n\t\t\t\tlightNode = new LightNode( light );\n\n\t\t\t}\n\n\t\t\tlightNodes.push( lightNode );\n\n\t\t}\n\n\t\tthis.lightNodes = lightNodes;\n\t\tthis._hash = null;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default LightsNode;\n", "import ContextNode from '../core/ContextNode.js';\nimport { reflectedLight } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass LightContextNode extends ContextNode {\n\n\tconstructor( node, lightingModelNode = null ) {\n\n\t\tsuper( node );\n\n\t\tthis.lightingModelNode = lightingModelNode;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\treturn 'vec3';\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { lightingModelNode } = this;\n\n\t\tthis.context.reflectedLight = reflectedLight();\n\n\t\tif ( lightingModelNode !== null ) {\n\n\t\t\tthis.context.lightingModelNode = lightingModelNode;\n\n\t\t}\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tsuper.generate( builder, type );\n\n\t\treturn this.context.reflectedLight.build( builder, type );\n\n\t}\n\n}\n\nexport default LightContextNode;\n", "import TempNode from '../core/TempNode.js';\nimport { vec2, vec3, negate, normalize, cross, dot, mul, add, transformedNormalView, positionViewDirection } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass MatcapUVNode extends TempNode {\n\n\tconstructor() {\n\n\t\tsuper( 'vec2' );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst x = normalize( vec3( positionViewDirection.z, 0, negate( positionViewDirection.x ) ) );\n\t\tconst y = cross( positionViewDirection, x );\n\n\t\tconst uv = add( mul( vec2( dot( x, transformedNormalView ), dot( y, transformedNormalView ) ), 0.495 ), 0.5 );\n\n\t\treturn uv.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n}\n\nexport default MatcapUVNode;\n", "import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass MaxMipLevelNode extends UniformNode {\n\n\tconstructor( texture ) {\n\n\t\tsuper( 0 );\n\n\t\tthis.texture = texture;\n\n\t\tthis.updateType = NodeUpdateType.Frame;\n\n\t}\n\n\tupdate() {\n\n\t\tconst { width, height } = this.texture.images ? this.texture.images[ 0 ] : this.texture.image;\n\n\t\tthis.value = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\tif ( this.value > 0 ) {\n\n\t\t\tthis.updateType = NodeUpdateType.None;\n\n\t\t}\n\n\t}\n\n}\n\nexport default MaxMipLevelNode;\n", "import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass TimerNode extends UniformNode {\n\n\tstatic LOCAL = 'local';\n\tstatic GLOBAL = 'global';\n\tstatic DELTA = 'delta';\n\n\tconstructor( scope = TimerNode.LOCAL ) {\n\n\t\tsuper( 0 );\n\n\t\tthis.scope = scope;\n\t\tthis.scale = 1;\n\n\t\tthis.updateType = NodeUpdateType.Frame;\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scale = this.scale;\n\n\t\tif ( scope === TimerNode.LOCAL ) {\n\n\t\t\tthis.value += frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.DELTA ) {\n\n\t\t\tthis.value = frame.deltaTime * scale;\n\n\t\t} else {\n\n\t\t\t// global\n\n\t\t\tthis.value = frame.time * scale;\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\t\tdata.scale = this.scale;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\t\tthis.scale = data.scale;\n\n\t}\n\n}\n\nexport default TimerNode;\n", "import Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { abs, fract, round, sin, add, sub, mul } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass OscNode extends Node {\n\n\tstatic SINE = 'sine';\n\tstatic SQUARE = 'square';\n\tstatic TRIANGLE = 'triangle';\n\tstatic SAWTOOTH = 'sawtooth';\n\n\tconstructor( method = OscNode.SINE, timeNode = new TimerNode() ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\t\tthis.timeNode = timeNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.timeNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst method = this.method;\n\t\tconst timeNode = this.timeNode;\n\n\t\tlet outputNode = null;\n\n\t\tif ( method === OscNode.SINE ) {\n\n\t\t\toutputNode = add( mul( sin( mul( add( timeNode, .75 ), Math.PI * 2 ) ), .5 ), .5 );\n\n\t\t} else if ( method === OscNode.SQUARE ) {\n\n\t\t\toutputNode = round( fract( timeNode ) );\n\n\t\t} else if ( method === OscNode.TRIANGLE ) {\n\n\t\t\toutputNode = abs( sub( 1, mul( fract( add( timeNode, .5 ) ), 2 ) ) );\n\n\t\t} else if ( method === OscNode.SAWTOOTH ) {\n\n\t\t\toutputNode = fract( timeNode );\n\n\t\t}\n\n\t\treturn outputNode.build( builder );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\nexport default OscNode;\n", "import Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport JoinNode from '../utils/JoinNode.js';\n\nclass SpriteSheetUVNode extends Node {\n\n\tconstructor( countNode, uvNode = new UVNode(), frameNode = new ConstNode( 0 ) ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.countNode = countNode;\n\t\tthis.uvNode = uvNode;\n\t\tthis.frameNode = frameNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst count = this.countNode;\n\t\tconst uv = this.uvNode;\n\t\tconst frame = this.frameNode;\n\n\t\tconst one = new ConstNode( 1 );\n\n\t\tconst width = new SplitNode( count, 'x' );\n\t\tconst height = new SplitNode( count, 'y' );\n\n\t\tconst total = new OperatorNode( '*', width, height );\n\n\t\tconst roundFrame = new MathNode( MathNode.FLOOR, new MathNode( MathNode.MOD, frame, total ) );\n\n\t\tconst frameNum = new OperatorNode( '+', roundFrame, one );\n\n\t\tconst cell = new MathNode( MathNode.MOD, roundFrame, width );\n\t\tconst row = new MathNode( MathNode.CEIL, new OperatorNode( '/', frameNum, width ) );\n\t\tconst rowInv = new OperatorNode( '-', height, row );\n\n\t\tconst scale = new OperatorNode( '/', one, count );\n\n\t\tconst uvFrameOffset = new JoinNode( [\n\t\t\tnew OperatorNode( '*', cell, new SplitNode( scale, 'x' ) ),\n\t\t\tnew OperatorNode( '*', rowInv, new SplitNode( scale, 'y' ) )\n\t\t] );\n\n\t\tconst uvScale = new OperatorNode( '*', uv, scale );\n\t\tconst uvFrame = new OperatorNode( '+', uvScale, uvFrameOffset );\n\n\t\treturn uvFrame.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n}\n\nexport default SpriteSheetUVNode;\n", "import Node from '../core/Node.js';\nimport { ShaderNode, uv, add, mul, floor, mod, sign } from '../shadernode/ShaderNodeBaseElements.js';\n\nconst checkerShaderNode = new ShaderNode( ( inputs ) => {\n\n\tconst uv = mul( inputs.uv, 2.0 );\n\n\tconst cx = floor( uv.x );\n\tconst cy = floor( uv.y );\n\tconst result = mod( add( cx, cy ), 2.0 );\n\n\treturn sign( result );\n\n} );\n\nclass CheckerNode extends Node {\n\n\tconstructor( uvNode = uv() ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.uvNode = uvNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn checkerShaderNode.call( { uv: this.uvNode } ).build( builder );\n\n\t}\n\n}\n\nexport default CheckerNode;\n", "import Node from '../core/Node.js';\nimport MathNode from '../math/MathNode.js';\n\nclass FogNode extends Node {\n\n\tconstructor( colorNode, factorNode ) {\n\n\t\tsuper( 'float' );\n\n\t\tthis.colorNode = colorNode;\n\t\tthis.factorNode = factorNode;\n\n\t}\n\n\tmix( outputNode ) {\n\n\t\treturn new MathNode( MathNode.MIX, outputNode, this.colorNode, this );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\treturn this.factorNode.build( builder, 'float' );\n\n\t}\n\n}\n\nFogNode.prototype.isFogNode = true;\n\nexport default FogNode;\n", "import FogNode from './FogNode.js';\nimport { smoothstep, negate, positionView } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass FogRangeNode extends FogNode {\n\n\tconstructor( colorNode, nearNode, farNode ) {\n\n\t\tsuper( colorNode );\n\n\t\tthis.nearNode = nearNode;\n\t\tthis.farNode = farNode;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tthis.factorNode = smoothstep( this.nearNode, this.farNode, negate( positionView.z ) );\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nFogRangeNode.prototype.isFogRangeNode = true;\n\nexport default FogRangeNode;\n", "import { ShaderNode, add, sub, mul, exp2 } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst F_Schlick = new ShaderNode( ( inputs ) => {\n\n\tconst { f0, f90, dotVH } = inputs;\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tconst fresnel = exp2( mul( sub( mul( - 5.55473, dotVH ), 6.98316 ), dotVH ) );\n\n\treturn add( mul( f0, sub( 1.0, fresnel ) ), mul( f90, fresnel ) );\n\n} ); // validated\n\nexport default F_Schlick;\n", "import { ShaderNode, add, sub, mul, div, pow2, max, sqrt, EPSILON } from '../../shadernode/ShaderNodeBaseElements.js';\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nconst V_GGX_SmithCorrelated = new ShaderNode( ( inputs ) => {\n\n\tconst { alpha, dotNL, dotNV } = inputs;\n\n\tconst a2 = pow2( alpha );\n\n\tconst gv = mul( dotNL, sqrt( add( a2, mul( sub( 1.0, a2 ), pow2( dotNV ) ) ) ) );\n\tconst gl = mul( dotNV, sqrt( add( a2, mul( sub( 1.0, a2 ), pow2( dotNL ) ) ) ) );\n\n\treturn div( 0.5, max( add( gv, gl ), EPSILON ) );\n\n} ); // validated\n\nexport default V_GGX_SmithCorrelated;\n", "import { ShaderNode, add, sub, mul, div, pow2 } from '../../shadernode/ShaderNodeBaseElements.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = new ShaderNode( ( inputs ) => {\n\n\tconst { alpha, dotNH } = inputs;\n\n\tconst a2 = pow2( alpha );\n\n\tconst denom = add( mul( pow2( dotNH ), sub( a2, 1.0 ) ), 1.0 ); // avoid alpha = 0 with dotNH = 1\n\n\treturn mul( 1 / Math.PI, div( a2, pow2( denom ) ) );\n\n} ); // validated\n\nexport default D_GGX;\n", "import F_Schlick from './F_Schlick.js';\nimport V_GGX_SmithCorrelated from './V_GGX_SmithCorrelated.js';\nimport D_GGX from './D_GGX.js';\nimport {\n\tShaderNode, dotNV, add, mul, saturate, dot, pow2, normalize,\n\ttransformedNormalView, positionViewDirection\n} from '../../shadernode/ShaderNodeBaseElements.js';\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nconst BRDF_GGX = new ShaderNode( ( inputs ) => {\n\n\tconst { lightDirection, f0, f90, roughness } = inputs;\n\n\tconst alpha = pow2( roughness ); // UE4's roughness\n\n\tconst halfDir = normalize( add( lightDirection, positionViewDirection ) );\n\n\tconst dotNL = saturate( dot( transformedNormalView, lightDirection ) );\n\t//const dotNV = saturate( dot( transformedNormalView, positionViewDirection ) );\n\tconst dotNH = saturate( dot( transformedNormalView, halfDir ) );\n\tconst dotVH = saturate( dot( positionViewDirection, halfDir ) );\n\n\tconst F = F_Schlick.call( { f0, f90, dotVH } );\n\n\tconst V = V_GGX_SmithCorrelated.call( { alpha, dotNL, dotNV } );\n\n\tconst D = D_GGX.call( { alpha, dotNH } );\n\n\treturn mul( F, mul( V, D ) );\n\n} ); // validated\n\nexport default BRDF_GGX;\n", "import { ShaderNode, mul } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst BRDF_Lambert = new ShaderNode( ( inputs ) => {\n\n\treturn mul( 1 / Math.PI, inputs.diffuseColor ); // punctual light\n\n} ); // validated\n\nexport default BRDF_Lambert;\n", "import { ShaderNode, max, abs, dFdx, dFdy, normalGeometry } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst getGeometryRoughness = new ShaderNode( () => {\n\n\tconst dxy = max( abs( dFdx( normalGeometry ) ), abs( dFdy( normalGeometry ) ) );\n\tconst geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\n\treturn geometryRoughness;\n\n} );\n\nexport default getGeometryRoughness;\n", "import getGeometryRoughness from './getGeometryRoughness.js';\nimport { ShaderNode, add, max, min } from '../../shadernode/ShaderNodeBaseElements.js';\n\nconst getRoughness = new ShaderNode( ( inputs ) => {\n\n\tconst { roughness } = inputs;\n\n\tconst geometryRoughness = getGeometryRoughness.call();\n\n\tlet roughnessFactor = max( roughness, 0.0525 ); // 0.0525 corresponds to the base mip of a 256 cubemap.\n\troughnessFactor = add( roughnessFactor, geometryRoughness );\n\troughnessFactor = min( roughnessFactor, 1.0 );\n\n\treturn roughnessFactor;\n\n} );\n\nexport default getRoughness;\n", "import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport {\n\tShaderNode, mul, saturate, dot, transformedNormalView,\n\tdiffuseColor, specularColor, roughness\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nconst RE_Direct_Physical = new ShaderNode( ( inputs ) => {\n\n\tconst { lightDirection, lightColor, reflectedLight } = inputs;\n\n\tconst dotNL = saturate( dot( transformedNormalView, lightDirection ) );\n\tconst irradiance = mul( dotNL, lightColor );\n\n\treflectedLight.directSpecular.add( mul( irradiance, BRDF_GGX.call( { lightDirection, f0: specularColor, f90: 1, roughness } ) ) );\n\n\treflectedLight.directDiffuse.add( mul( irradiance, BRDF_Lambert.call( { diffuseColor: diffuseColor.rgb } ) ) );\n\n} );\n\nconst PhysicalLightingModel = new ShaderNode( ( inputs/*, builder*/ ) => {\n\n\tRE_Direct_Physical.call( inputs );\n\n} );\n\nexport default PhysicalLightingModel;\n", "// accessors\nimport CubeTextureNode from '../accessors/CubeTextureNode.js';\nimport InstanceNode from '../accessors/InstanceNode.js';\nimport ReflectNode from '../accessors/ReflectNode.js';\nimport SkinningNode from '../accessors/SkinningNode.js';\n\n// display\nimport ColorSpaceNode from '../display/ColorSpaceNode.js';\nimport NormalMapNode from '../display/NormalMapNode.js';\nimport ToneMappingNode from '../display/ToneMappingNode.js';\n\n// lights\nimport LightNode from '../lights/LightNode.js';\nimport LightsNode from '../lights/LightsNode.js';\nimport LightContextNode from '../lights/LightContextNode.js';\n\n// utils\nimport MatcapUVNode from '../utils/MatcapUVNode.js';\nimport MaxMipLevelNode from '../utils/MaxMipLevelNode.js';\nimport OscNode from '../utils/OscNode.js';\nimport SpriteSheetUVNode from '../utils/SpriteSheetUVNode.js';\nimport TimerNode from '../utils/TimerNode.js';\n\n// procedural\nimport CheckerNode from '../procedural/CheckerNode.js';\n\n// fog\nimport FogNode from '../fog/FogNode.js';\nimport FogRangeNode from '../fog/FogRangeNode.js';\n\n// shader node utils\nimport { nodeObject, nodeProxy, nodeImmutable } from './ShaderNode.js';\n\n//\n// Node Material Shader Syntax\n//\n\n// shader node utils\n\nexport * from './ShaderNodeBaseElements.js';\n\n// functions\n\nexport { default as BRDF_GGX } from '../functions/BSDF/BRDF_GGX.js'; // see https://github.com/tc39/proposal-export-default-from\nexport { default as BRDF_Lambert } from '../functions/BSDF/BRDF_Lambert.js';\nexport { default as D_GGX } from '../functions/BSDF/D_GGX.js';\nexport { default as F_Schlick } from '../functions/BSDF/F_Schlick.js';\nexport { default as V_GGX_SmithCorrelated } from '../functions/BSDF/V_GGX_SmithCorrelated.js';\n\nexport { default as getDistanceAttenuation } from '../functions/light/getDistanceAttenuation.js';\n\nexport { default as getGeometryRoughness } from '../functions/material/getGeometryRoughness.js';\nexport { default as getRoughness } from '../functions/material/getRoughness.js';\n\nexport { default as PhysicalLightingModel } from '../functions/PhysicalLightingModel.js';\n\n// accessors\n\nexport const cubeTexture = nodeProxy( CubeTextureNode );\n\nexport const instance = nodeProxy( InstanceNode );\n\nexport const reflectVector = nodeImmutable( ReflectNode, ReflectNode.VECTOR );\nexport const reflectCube = nodeImmutable( ReflectNode, ReflectNode.CUBE );\n\nexport const skinning = nodeProxy( SkinningNode );\n\n// display\n\nexport const colorSpace = ( node, encoding ) => nodeObject( new ColorSpaceNode( null, nodeObject( node ) ).fromEncoding( encoding ) );\nexport const normalMap = nodeProxy( NormalMapNode );\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\n\n// lights\n\nexport const light = nodeProxy( LightNode );\nexport const fromLights = ( lights ) => nodeObject( new LightsNode().fromLights( lights ) );\nexport const lightContext = nodeProxy( LightContextNode );\n\n// utils\n\nexport const matcapUV = nodeImmutable( MatcapUVNode );\nexport const maxMipLevel = nodeProxy( MaxMipLevelNode );\n\nexport const oscSine = nodeProxy( OscNode, OscNode.SINE );\nexport const oscSquare = nodeProxy( OscNode, OscNode.SQUARE );\nexport const oscTriangle = nodeProxy( OscNode, OscNode.TRIANGLE );\nexport const oscSawtooth = nodeProxy( OscNode, OscNode.SAWTOOTH );\n\nexport const spritesheetUV = nodeProxy( SpriteSheetUVNode );\n\nexport const timerLocal = nodeImmutable( TimerNode, TimerNode.LOCAL );\nexport const timerGlobal = nodeImmutable( TimerNode, TimerNode.GLOBAL );\nexport const timerDelta = nodeImmutable( TimerNode, TimerNode.DELTA );\n\n// procedural\n\nexport const checker = nodeProxy( CheckerNode );\n\n// fog\n\nexport const fog = nodeProxy( FogNode );\nexport const rangeFog = nodeProxy( FogRangeNode );\n"],
  "mappings": "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",
  "names": ["texture", "uv", "normalMap", "color", "toneMapping", "light", "positionView", "reflectedLight", "light", "uv", "texture", "uv", "uv", "dotNV", "roughness", "roughness", "reflectedLight", "color"]
}
